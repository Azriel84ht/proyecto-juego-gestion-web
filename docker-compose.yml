services:
  # Servicio de Autenticación
  auth-api:
    build:
      context: ./apps/auth-service
      dockerfile: Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    volumes:
      # Monta solo el código para hot-reloading en el backend.
      - ./apps/auth-service:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - webnet

  # Servicio de Cliente Web
  web-client:
    build:
      context: ./apps/web-client
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - auth-api
    networks:
      - webnet
    # <--- CORRECCIÓN CLAVE: Se ha eliminado la sección 'volumes' de aquí
    # ya que el Dockerfile maneja la compilación y copia de archivos para producción.

  # Servicio de Base de Datos
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - webnet

# Red para la comunicación entre contenedores
networks:
  webnet:
    driver: bridge

# Volumen para persistir los datos de PostgreSQL
volumes:
  postgres_data: